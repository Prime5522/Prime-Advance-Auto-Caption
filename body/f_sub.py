from pyrogram import Client, filters, enums 
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserNotParticipant
from info import *
from .database import insert

async def not_subscribed(_, client, message):
    user_id = int(message.from_user.id)
    await insert(user_id)
    if not FORCE_SUB:
        return False
    try:             
        user = await client.get_chat_member(FORCE_SUB, message.from_user.id) 
        if user.status == enums.ChatMemberStatus.BANNED:
            return True 
        else:
            return False                
    except UserNotParticipant:
        pass
    return True


@Client.on_message(filters.private & filters.create(not_subscribed))
async def forces_sub(client, message):
    buttons = [[InlineKeyboardButton(text="üì¢ ‚úá Join Our Updates Channel ‚úá üì¢", url=f"https://t.me/{FORCE_SUB}") ]]
    text = ""
    photo_url = "https://envs.sh/CEG.jpg"  # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶ú ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®

    try:
        silicon = await client.get_chat_member(FORCE_SUB, message.from_user.id)    
        if silicon.status == enums.ChatMemberStatus.BANNED:  # ‡¶Ø‡¶¶‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶π‡¶Ø‡¶º‡ßá ‡¶•‡¶æ‡¶ï‡ßá                             
            return await client.send_message(message.from_user.id, text="S·¥è Ä Äy Y·¥è·¥ú' Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö T·¥è UÍú±·¥á M·¥á")  
    except UserNotParticipant:  # ‡¶Ø‡¶¶‡¶ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶®‡¶æ ‡¶π‡¶Ø‡¶º                     
        return await message.reply_photo(
            photo=photo_url,  # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶á‡¶Æ‡ßá‡¶ú ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¶‡¶ø‡¶¨‡ßá‡¶®
            caption=text,  # ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü
            reply_markup=InlineKeyboardMarkup(buttons)  # ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ‡¶Ø‡ßã‡¶ó‡¶¶‡¶æ‡¶®‡ßá‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶®
        )
    return await message.reply_photo(
        photo=photo_url,
        caption=text,
        reply_markup=InlineKeyboardMarkup(buttons)
    )
